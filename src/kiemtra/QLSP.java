/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kiemtra;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class QLSP extends javax.swing.JFrame {

        protected  ArrayList<SanPham> lst;
        protected String dbUserName,dbPassword;
        int index;
    /**
     * Creates new form SanPham
     */
    public QLSP() {
        initComponents();
        setLocationRelativeTo(null);
        
        this.lst = new ArrayList<SanPham>();
        this.dbUserName = "sa";
        this.dbPassword = "123";
        
        
        this.lst = this.fetchList();
        this.renderJTable();
        if(lst.size()>=index){
            index = 0;
            showDetail();
        }
    }
    
    public void renderJTable(){
        DefaultTableModel model = (DefaultTableModel) this.tblTT.getModel();
        for(int i = 0 ;i < this.lst.size() ;i++){
            SanPham sp = this.lst.get(i);
            model.addRow(new Object[]{
                sp.getMaSP(),sp.getTenSP(),sp.getNgayNhap(),sp.getSoLuong()
            });
        }
    }
    
    protected ArrayList<SanPham> fetchList(){
        ArrayList<SanPham> result = new ArrayList<SanPham>();
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = "jdbc:sqlserver://localhost:1433;databaseName=lab56_qlsp";
            
                Connection conn = DriverManager.getConnection(url,this.dbUserName,this.dbPassword);
                
                String query = "SELECT * FROM san_pham";
                
                Statement statement = conn.createStatement();
                ResultSet resultSet = statement.executeQuery(query);
                
                while(resultSet.next()){
                    String ma = resultSet.getString("ma_sp");
                    String ten = resultSet.getString("ten");
                    Date ngayNhap = resultSet.getDate("ngay_nhap");
                    int soLuong = resultSet.getInt("so_luong");
                    
                    result.add(new SanPham(WIDTH, soLuong, ten, ma, ngayNhap));
                }
            } catch (SQLException ex) {
                Logger.getLogger(QLSP.class.getName()).log(Level.SEVERE, null, ex);
            
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy Driver tương thích!","Có lỗi xảy ra!",JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
            return result;
    }
    
    public void showDetail(){
        SanPham sp = lst.get(index);
        txtMa.setText(sp.getMaSP());
        txtTen.setText(sp.getTenSP());
        txtNgay.setText(sp.getNgayNhap()+"");
        txtSoLuong.setText(sp.getSoLuong()+"");
        tblTT.setRowSelectionInterval(index, index);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTen = new javax.swing.JTextField();
        txtMa = new javax.swing.JTextField();
        txtNgay = new javax.swing.JTextField();
        txtSoLuong = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTT = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý sản phẩm");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Tên SP");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Mã SP");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Ngày nhập");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Số lượng");

        txtTen.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtMa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtNgay.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtSoLuong.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnUpdate.setText("Update");

        btnDelete.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        tblTT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Sản Phẩm", "Tên Sản Phẩm", "Ngày Nhập", "Số lượng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTTMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTT);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(btnAdd)
                .addGap(41, 41, 41)
                .addComponent(btnUpdate)
                .addGap(39, 39, 39)
                .addComponent(btnDelete)
                .addGap(34, 34, 34)
                .addComponent(btnClear)
                .addGap(30, 30, 30))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdd, btnClear, btnDelete, btnUpdate});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnClear))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
       txtMa.setText("");
       txtTen.setText("");
       txtNgay.setText("");
       txtSoLuong.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String ma = this.txtMa.getText();
        String ten = this.txtTen.getText();
        String ngayNhap = this.txtNgay.getText();
        String soLuongStr = this.txtSoLuong.getText();
        
        if(ma.length() == 0 ||
           ten.length() == 0 ||
           ngayNhap.length() == 0 ||
           soLuongStr.length() == 0 
          ){
            JOptionPane.showMessageDialog(this, "Không được để trống!");
            return;
        }
        
        int soLuong = 0;
        try {
            soLuong = Integer.parseInt(soLuongStr);
            if(soLuong < 0){
                JOptionPane.showMessageDialog(this, "Số lượng phải lớn hơn hoặc bằng 0");
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Số lượng phải là số!");
            e.printStackTrace();
        }
        
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = "jdbc:sqlserver://localhost:1433;databaseName=lab56_qlsp";
            
                Connection conn = DriverManager.getConnection(url,this.dbUserName,this.dbPassword);
                
                String query = "INSERT INTO san_pham(ten,ma_sp,ngay_nhap,so_luong)"+"VALUES(?,?,?,?)";
                
                PreparedStatement ps = conn.prepareStatement(query);
                ps.setString(1, ten);
                ps.setString(2, ma);
                ps.setString(3, ngayNhap);
                ps.setString(4, soLuongStr);
                
                ps.execute();
                JOptionPane.showMessageDialog(this, "Thêm thành công");
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(QLSP.class.getName()).log(Level.SEVERE, null, ex);
               
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(QLSP.class.getName()).log(Level.SEVERE, null, ex);
            }
//            
//            SanPham sp = this.timSanPhamTheoMaSP(ma);
//            this.lst.add(sp);
    }//GEN-LAST:event_btnAddActionPerformed
    
//    protected SanPham timSanPhamTheoMaSP(String maSP)
//    {
//        SanPham sp = null;
//        
//        try {
//            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
//            
//            String url = "jdbc:sqlserver://localhost:1433;databaseName=lab56_qlsp";
//
//            Connection conn = DriverManager.getConnection(url,
//                this.dbUserName, this.dbPassword);
//
//            String query = "SELECT * FROM san_pham WHERE MaSP = ?";
//            
//            PreparedStatement ps = conn.prepareStatement(query);
//            ps.setString(3, maSP);
//
//            ResultSet rs = ps.executeQuery();
//            
//            rs.next();
//            String ma = rs.getString("maSP");
//            String ten = rs.getString("tenSP");
//            String ngay = rs.getString("ngayNhap");
//            int soLuong = rs.getInt("soLuong");
//            
//            sp = new SanPham(ten, maSP, ngay, soLuong);
//              
//            
//            conn.close();
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(QLSP.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (SQLException ex) {
//            Logger.getLogger(QLSP.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        
//        return sp;
//    }
//     
//         protected SanPham xoaSanPhamTheoMaSP(String maSP)
//    {
//        SanPham sp = null;
//        
//        try {
//            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
//            
//            String url = "jdbc:sqlserver://localhost:1433;databaseName=lab56_qlsp";
//
//            Connection conn = DriverManager.getConnection(url,
//                this.dbUserName, this.dbPassword);
//
//            String query = "DELETE FROM san_pham WHERE ma_sp = ?";
//            
//            PreparedStatement ps = conn.prepareStatement(query);
//            ps.setString(3, maSP);
//
//            ps.execute();
//            conn.close();
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(QLSP.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (SQLException ex) {
//            Logger.getLogger(QLSP.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        
//        return sp;
//    }
    
    private void tblTTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTTMouseClicked
        try {
            index = tblTT.getSelectedRow();
            if(lst.size()>=0){
                showDetail();
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi click chuột!");
        }
    }//GEN-LAST:event_tblTTMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
      //this.xoaSanPhamTheoMaSP();
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLSP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLSP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLSP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLSP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLSP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTT;
    private javax.swing.JTextField txtMa;
    private javax.swing.JTextField txtNgay;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTen;
    // End of variables declaration//GEN-END:variables
}
